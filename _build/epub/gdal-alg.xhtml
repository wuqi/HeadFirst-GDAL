<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>GDAL算法简介</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head>
  <body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="gdal">
<span id="gdalalgs"></span><h1>GDAL算法简介</h1>
<p>主要来自 <a class="reference external" href="https://www.gdal.org/pages.html">GDAL RelatePages</a><span class="link-target"> [https://www.gdal.org/pages.html]</span> 等 ,对部分翻译进行了少量修改和更新。暂时只介绍几种用过的算法,以后再加。</p>
<div class="section" id="id1">
<h2>GDAL网格插值</h2>
<p>主要来自 <a class="reference external" href="https://www.gdal.org/grid_tutorial.html">GDAL Grid Tutorial</a><span class="link-target"> [https://www.gdal.org/grid_tutorial.html]</span></p>
<p>想要了解插值算法可以看 <a class="reference external" href="https://blog.csdn.net/liminlu0314/article/details/7654279">GDAL源码剖析（十三）之GDAL网格插值说明</a><span class="link-target"> [https://blog.csdn.net/liminlu0314/article/details/7654279]</span> ,基本是对GDAL文档的翻译</p>
<p>这里就直接介绍如何使用, <code class="docutils literal"><span class="pre">GDAL</span></code> 里网格插值算法有两大类,使用数据指标或者插值算法,数据指标用的是搜索椭圆内的点的数据指标来算,另一种就是根据离散点插值,有反距离权重等方式.</p>
<p>插值方式有三种:</p>
<blockquote>
<div><ol class="arabic simple">
<li><p>直接使用函数 <code class="docutils literal"><span class="pre">GDALGridCreate</span></code> 创建</p></li>
<li><p>使用 <code class="docutils literal"><span class="pre">GDALGridContextCreate</span></code> <code class="docutils literal"><span class="pre">GDALGridContextProcess</span></code> 和 <code class="docutils literal"><span class="pre">GDALGridContextFree</span></code> ,使用重复参数批量生成插值时,这种方式效率较高</p></li>
<li><p>使用工具方式调用 <code class="docutils literal"><span class="pre">GDALGrid</span></code> 创建,详情见 <a class="reference internal" href="gdal-tool-code.xhtml#gdalutilitieswithcode"><span class="std std-ref">GDAL工具集代码实现(C/C++)</span></a> 部分,此处不再赘述</p></li>
</ol>
</div></blockquote>
<p>参数比较简单,就不翻译了,直接看代码:</p>
<div class="section" id="id2">
<h3>方式一</h3>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">padfX</span><span class="p">;</span>
<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">padfY</span><span class="p">;</span>
<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">padfZ</span><span class="p">;</span>
<span class="c1">//TODO: 添加x,y,z离散点,请自行修改</span>
<span class="p">...</span>
<span class="c1">//END</span>
<span class="c1">//算最值</span>
<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;::</span><span class="n">iterator</span> <span class="n">it</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">min_element</span><span class="p">(</span><span class="n">padfX</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">padfX</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
<span class="kt">double</span>  <span class="n">dfXMin</span> <span class="o">=</span> <span class="o">*</span><span class="n">it</span><span class="p">;</span>
<span class="n">it</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">max_element</span><span class="p">(</span><span class="n">padfX</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">padfX</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
<span class="kt">double</span>  <span class="n">dfXMax</span> <span class="o">=</span> <span class="o">*</span><span class="n">it</span><span class="p">;</span>
<span class="n">it</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">min_element</span><span class="p">(</span><span class="n">padfY</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">padfY</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
<span class="kt">double</span>  <span class="n">dfYMin</span> <span class="o">=</span> <span class="o">*</span><span class="n">it</span><span class="p">;</span>
<span class="n">it</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">max_element</span><span class="p">(</span><span class="n">padfY</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">padfY</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
<span class="kt">double</span>  <span class="n">dfYMax</span> <span class="o">=</span> <span class="o">*</span><span class="n">it</span><span class="p">;</span>
<span class="c1">// 离散点内插方法</span>
<span class="c1">//Linear 先构建Delaunay 三角网,然后用三角网插值,插值速度较快,速度仅与构网的离散点数量有关</span>
<span class="c1">//无论是何种方式内插,都需要构建Options</span>
<span class="c1">//插值算法有对应的Option结构体,数据指标(Data Metric)用的是统一的结构体 GDALGridDataMetricsOptions</span>
<span class="n">GDALGridLinearOptions</span>  <span class="o">*</span><span class="n">poOptions</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GDALGridLinearOptions</span><span class="p">();</span>
<span class="n">poOptions</span><span class="o">-&gt;</span><span class="n">dfNoDataValue</span> <span class="o">=</span> <span class="o">-</span><span class="mi">9999</span><span class="p">;</span>
<span class="n">poOptions</span><span class="o">-&gt;</span><span class="n">dfRadius</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="c1">//构建GRID</span>
<span class="kt">double</span> <span class="o">*</span><span class="n">pGridData</span>  <span class="o">=</span>  <span class="k">new</span> <span class="kt">double</span><span class="p">[</span><span class="n">nWidth</span><span class="o">*</span><span class="n">nHeight</span><span class="p">];</span>
<span class="n">GDALGridCreate</span><span class="p">(</span><span class="n">GGA_Linear</span> <span class="p">,</span><span class="n">poOptions</span><span class="p">,</span><span class="n">padfX</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span><span class="o">&amp;</span><span class="p">(</span><span class="n">padfX</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="o">&amp;</span><span class="p">(</span><span class="n">padfY</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="o">&amp;</span><span class="p">(</span><span class="n">padfZ</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span>\
    <span class="n">dfXMin</span><span class="p">,</span> <span class="n">dfXMax</span><span class="p">,</span> <span class="n">dfYMin</span><span class="p">,</span> <span class="n">dfYMax</span><span class="p">,</span> <span class="n">nWidth</span><span class="p">,</span> <span class="n">nHeight</span><span class="p">,</span> <span class="n">GDT_Float64</span><span class="p">,</span> <span class="n">pGridData</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
<span class="k">delete</span> <span class="n">poOptions</span><span class="p">;</span>
<span class="c1">//处理生成的grid</span>
<span class="p">...</span>
<span class="k">delete</span><span class="p">[]</span> <span class="n">pGridData</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="id3">
<h3>方式二</h3>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="n">GDALGridLinearOptions</span>  <span class="o">*</span><span class="n">poOptions</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GDALGridLinearOptions</span><span class="p">();</span>
<span class="n">poOptions</span><span class="o">-&gt;</span><span class="n">dfNoDataValue</span> <span class="o">=</span> <span class="o">-</span><span class="mi">9999</span><span class="p">;</span>
<span class="n">poOptions</span><span class="o">-&gt;</span><span class="n">dfRadius</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="c1">//构建GRID</span>
<span class="kt">double</span> <span class="o">*</span><span class="n">pGridData</span>  <span class="o">=</span>  <span class="k">new</span> <span class="kt">double</span><span class="p">[</span><span class="n">nWidth</span><span class="o">*</span><span class="n">nHeight</span><span class="p">];</span>
<span class="n">GDALGridContext</span><span class="o">*</span> <span class="n">context</span> <span class="o">=</span> <span class="n">GDALGridContextCreate</span><span class="p">(</span><span class="n">GGA_Linear</span><span class="p">,</span><span class="n">poOptions</span><span class="p">,</span><span class="n">padfX</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span><span class="o">&amp;</span><span class="p">(</span><span class="n">padfX</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="o">&amp;</span><span class="p">(</span><span class="n">padfY</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="o">&amp;</span><span class="p">(</span><span class="n">padfZ</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="n">gwFALSE</span><span class="p">);</span>
<span class="n">GDALGridContextProcess</span><span class="p">(</span><span class="n">context</span><span class="p">,</span><span class="n">dfXMin</span><span class="p">,</span> <span class="n">dfXMax</span><span class="p">,</span> <span class="n">dfYMin</span><span class="p">,</span> <span class="n">dfYMax</span><span class="p">,</span><span class="n">nWidth</span><span class="p">,</span> <span class="n">nHeight</span><span class="p">,</span> <span class="n">GDT_Float64</span><span class="p">,</span><span class="n">pGridData</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
<span class="n">GDALGridContextFree</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
<span class="c1">//处理生成的grid</span>
<span class="p">...</span>
<span class="k">delete</span><span class="p">[]</span> <span class="n">pGridData</span><span class="p">;</span>
<span class="k">delete</span> <span class="n">poOptions</span><span class="p">;</span>
</pre></div>
</div>
<div class="admonition warning">
<p class="admonition-title">Warning</p>
<ul class="simple">
<li><p>2.2.3以下的版本中, 网格插值使用 <code class="docutils literal"><span class="pre">GGA_Linear</span></code> 方法可能会崩溃,在2.2.3中修复,可以直接修改源码,可按照
<a class="reference external" href="https://github.com/OSGeo/gdal/commit/ea2627dc5205e30d3463c64718c3bd147ce0b8c0#diff-62b56095c6ca3aa65387c3b8d95808f9">GDALGrid() with linear algorithm: avoid assertions/segmentation fault…</a><span class="link-target"> [https://github.com/OSGeo/gdal/commit/ea2627dc5205e30d3463c64718c3bd147ce0b8c0#diff-62b56095c6ca3aa65387c3b8d95808f9]</span>
中的代码修改</p></li>
</ul>
</div>
</div>
</div>
<div class="section" id="id4">
<h2>GDAL栅格化</h2>
<p>主要来自 <a class="reference external" href="https://www.gdal.org/gdal__alg_8h.html">gdal_alg.h File Reference</a><span class="link-target"> [https://www.gdal.org/gdal__alg_8h.html]</span></p>
<p>栅格化三个函数类似, <code class="docutils literal"><span class="pre">GDALRasterizeLayers</span>&#160; <span class="pre">GDALRasterizeGeometries</span> <span class="pre">GDALRasterizeLayersBuf</span></code> 需要注意的参数只有     <code class="docutils literal"><span class="pre">padfGeomBurnValue</span></code> 或者 <code class="docutils literal"><span class="pre">dfBurnValue</span></code>
这个参数是矢量栅格化后的具体值,可以设置为栅格值</p>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="n">GDALDataset</span><span class="o">*</span> <span class="n">outDS</span><span class="p">;</span>
<span class="c1">//创建outDS</span>
<span class="p">...</span>
<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">OGRGeometryH</span><span class="o">&gt;</span> <span class="n">ahGeometries</span><span class="p">;</span>
<span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span> <span class="n">adfFullBurnValues</span><span class="p">;</span>
<span class="c1">//加入各个几何形状和各个几何形状对应的值</span>
<span class="c1">//adfFullBurnValues个数为对应ahGeometries乘以波段数,每个波段都需要设置值</span>

<span class="n">ahGeometries</span><span class="p">.</span><span class="n">push_back</span><span class="p">((</span><span class="n">OGRGeometryH</span><span class="p">)</span><span class="n">OgrPolygon</span><span class="p">);</span>
<span class="n">adfFullBurnValues</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="c1">//几何变换参数,可以参照wrap</span>
<span class="kt">void</span> <span class="o">*</span> <span class="n">hGenTransformArg</span><span class="o">=</span><span class="nb">NULL</span><span class="p">;</span>
<span class="n">hGenTransformArg</span> <span class="o">=</span> <span class="n">GDALCreateGenImgProjTransformer</span><span class="p">(</span> <span class="nb">NULL</span><span class="p">,</span>
    <span class="nb">NULL</span><span class="p">,</span>
    <span class="p">(</span><span class="n">GDALDatasetH</span><span class="p">)</span><span class="n">outDS</span><span class="p">,</span>
    <span class="n">outDS</span><span class="o">-&gt;</span><span class="n">GetProjectionRef</span><span class="p">(),</span>
    <span class="nb">false</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">3</span> <span class="p">);</span>
<span class="n">CPLErr</span> <span class="n">err</span> <span class="o">=</span> <span class="n">GDALRasterizeGeometries</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span><span class="n">outDS</span><span class="p">,</span>
                                    <span class="mi">1</span><span class="p">,</span>
                                    <span class="n">pnbandlist</span><span class="p">,</span>
                                    <span class="n">ahGeometries</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span><span class="o">&amp;</span><span class="p">(</span><span class="n">ahGeometries</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span>
                                    <span class="n">GDALGenImgProjTransform</span><span class="p">,</span>
                                    <span class="n">hGenTransformArg</span><span class="p">,</span>
                                    <span class="o">&amp;</span><span class="p">(</span><span class="n">adfFullBurnValues</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span>
                                    <span class="n">papszOptions</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
<span class="n">GDALDestroyGenImgProjTransformer</span><span class="p">(</span><span class="n">hGenTransformArg</span><span class="p">);</span>
<span class="n">GDALClose</span><span class="p">(</span><span class="n">outDS</span><span class="p">);</span>

<span class="k">delete</span><span class="p">[]</span><span class="n">pnbandlist</span><span class="p">;</span>
<span class="k">delete</span><span class="p">[]</span><span class="n">dburnValues</span><span class="p">;</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>