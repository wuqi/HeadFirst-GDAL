<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>GDALWarp</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head>
  <body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="gdalwarp">
<span id="id1"></span><h1>GDALWarp</h1>
<p>本章来源：</p>
<ul class="simple">
<li><p><a class="reference external" href="http://blog.csdn.net/liminlu0314/article/details/7603162">GDAL源码剖析（十二）之GDAL Warp API使用说明</a><span class="link-target"> [http://blog.csdn.net/liminlu0314/article/details/7603162]</span></p></li>
<li><p><a class="reference external" href="http://www.gdal.org/structGDALWarpOptions.html#abf726bf4ef0927713370722ee34c6cc4">GDALWarpOptions Struct Reference</a><span class="link-target"> [http://www.gdal.org/structGDALWarpOptions.html#abf726bf4ef0927713370722ee34c6cc4]</span></p></li>
<li><p><a class="reference external" href="http://www.gdal.org/gdal__alg_8h.html">GDAL_Algorithms_C_API</a><span class="link-target"> [http://www.gdal.org/gdal__alg_8h.html]</span></p></li>
</ul>
<p>顺序重新调整,增加GDAL算法介绍，本章是进阶章节，阅读前请务必先熟悉 <a class="reference internal" href="gdal-data-model.xhtml#gdaldatamodel"><span class="std std-ref">GDAL数据模型</span></a> 与 <a class="reference internal" href="read-and-write.xhtml#read-write"><span class="std std-ref">栅格数据读写</span></a> 章节。</p>
<div class="section" id="id2">
<h2>GDALWarp简介</h2>
<p>GDAL Warp API（在文件 <code class="docutils literal"><span class="pre">gdalwarper.h</span></code> 中定义）是一个高效的进行图像变换的接口。主要由几何变换函数（ <code class="docutils literal"><span class="pre">GDALTransformerFunc</span></code> ），多种图像重采样方式，掩码操作选项等组成。这个接口可以对很大的图像进行处理。</p>
<p>使用步骤如下：</p>
<ul class="simple">
<li><p>在程序中，首先要初始化一个 <code class="docutils literal"><span class="pre">GDALWarpOptions</span></code>  结构体的对象</p></li>
<li><p>然后使用 <code class="docutils literal"><span class="pre">GDALWarpOptions</span></code> 的对象来初始化 <code class="docutils literal"><span class="pre">GDALWarpOperation</span></code> 的对象</p></li>
<li><p>最后通过调用 <code class="docutils literal"><span class="pre">GDALWarpKernel</span></code> 类里面的 <code class="docutils literal"><span class="pre">GDALWarpOperation::ChunkAndWarpImage()</span></code> 或  <code class="docutils literal"><span class="pre">GDALWarpOperation::ChunkAndWarpMulti()</span></code> 函数来完成图像的变换</p></li>
</ul>
<p>下面先介绍 <code class="docutils literal"><span class="pre">GDALWarpOptions</span></code> 和 <code class="docutils literal"><span class="pre">GDALTransformerFunc</span></code> ，然后对完整流程进行解析。</p>
</div>
<div class="section" id="gdalwarpoptions">
<span id="id3"></span><h2>GDALWarpOptions选项介绍</h2>
<p><code class="docutils literal"><span class="pre">GDALWarpOptions</span></code> 是对图像变换进行设置的类，成员见下：</p>
<dl class="class">
<dt id="_CPPv215GDALWarpOptions">
<span id="GDALWarpOptions"></span><em class="property">class </em><code class="descclassname"></code><code class="descname">GDALWarpOptions</code><br /></dt>
<dd><p>GDALWarpOptions结构体中包含了很多参数来对变换进行设置。下面对一些比较重要的进行列举说明：</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv216papszWarpOptions">
<span id="papszWarpOptions__cPP"></span>char **<code class="descclassname"></code><code class="descname">papszWarpOptions</code><br /></dt>
<dd><p>这个是一个字符串列表，用来设置图像变换过程中的一些选项，样式为 <code class="docutils literal"><span class="pre">NAME=VALUE</span></code> , 可以使用 <code class="docutils literal"><span class="pre">CSLSetNameValue()</span></code> 设置。现在支持的一些键值对设置为：</p>
<ul class="simple">
<li><p><code class="docutils literal"><span class="pre">INIT_DEST=[value]</span></code> 或者 <code class="docutils literal"><span class="pre">INIT_DEST=NO_DATA</span></code> ：这个选项用来强制设置结果图像的初始值（所有的波段），初始值为指定的value，或者NODATA值。NODATA值从参数padfDstNoDataReal或者参数padfDstNoDataImag中获取。如果这个值没有设置，那么将会使用原始图像的NODATA值来覆盖。</p></li>
<li><p><code class="docutils literal"><span class="pre">WRITE_FLUSH=YES/NO</span></code> ：这个选项用来强制设置在处理完每一块后将数据写入磁盘中。在某些时候，这个选项可以更加安全的写入结果数据，但是同时会增加更多的磁盘操作。目前这个默认值为NO。</p></li>
<li><p><code class="docutils literal"><span class="pre">SKIP_NOSOURCE=YES/NO</span></code> :跳过没有相应输入的数据块的处理。这将禁止初始化要写入的数据块以及其他所有处理，要谨慎使用。常用于影像拼接、镶嵌情况下，减少额外工作。</p></li>
<li><p><code class="docutils literal"><span class="pre">UNIFIED_SRC_NODATA=YES/[NO]</span></code> :默认情况下，每个波段的 <code class="docutils literal"><span class="pre">nodata</span></code> 掩膜数据是独立的。但有些时候所有波段的 <code class="docutils literal"><span class="pre">nodata</span></code> 值一致情况下，可以将此参数设置为YES。</p></li>
</ul>
<p>通常在计算一个数据的部分区域时，变换样区在输出区域每个边界上转换21个点到源文件中，然后在源图中计算一个足够大的窗口。这样做是为了使转换更加高效，但某些情况下，这种做法计算的窗口过小，甚至丢失大量的区域。特别是对于非线性或者是翻转的转换。例如对极地点附近的区域，从WGS84转到Polar Stereographic投影转换，或者某些根本无法进行投影转换的数据。对于这种情况，GDAL提供以下键值对设置来防止窗口计算错误：</p>
<ul class="simple">
<li><p><code class="docutils literal"><span class="pre">SAMPLE_GRID=YES/NO</span></code> : 如果设置为 <code class="docutils literal"><span class="pre">YES</span></code> ,将强制采样样区边缘点和中心点。对于变形很大的投影或者是大部分数据变换后不在源图像上的情况非常适用。</p></li>
<li><p><code class="docutils literal"><span class="pre">SAMPLE_STEPS</span></code> : 调整采样密度，默认为21，增加可以增强精确度，但是会降低计算效率。</p></li>
<li><p><code class="docutils literal"><span class="pre">SOURCE_EXTRA</span></code> : 该数值是边界增加的像素，默认为1，保证边界不出错，设置更大的画，将增加读取数量，但是可以避免丢失源数据。</p></li>
<li><p><code class="docutils literal"><span class="pre">CUTLINE</span></code> : 裁切线，使用wkt表示。与在 <code class="docutils literal"><span class="pre">GDALWarpOptions</span> <span class="pre">hCutline</span></code> 中设置相同，在 <code class="docutils literal"><span class="pre">GDALWarpOperation::Initialize()</span></code>  调用时将被设置到 <code class="docutils literal"><span class="pre">hCutline</span></code> 属性中。与  <code class="docutils literal"><span class="pre">gdalwarp</span></code> 工具不同，坐标系为图像的坐标系。</p></li>
<li><p><code class="docutils literal"><span class="pre">CUTLINE_BLEND_DIST</span></code> : 与 <code class="docutils literal"><span class="pre">dfCutlineBlendDist</span></code> 属性相同</p></li>
<li><p><code class="docutils literal"><span class="pre">CUTLINE_ALL_TOUCHED</span></code> : 默认为  <code class="docutils literal"><span class="pre">FALSE</span></code>  ，但是可以设置为  <code class="docutils literal"><span class="pre">TURE</span></code> ，保证与裁切线相交的像素会被裁剪，而不仅仅是完全被包含的像素。</p></li>
<li><p><code class="docutils literal"><span class="pre">OPTIMIZE_SIZE</span></code> : 默认为  <code class="docutils literal"><span class="pre">FALSE</span></code>  ，设置为  <code class="docutils literal"><span class="pre">TRUE</span></code> 时，在压缩格式中将获取更小的文件，可能导致转换变慢。</p></li>
<li><p><code class="docutils literal"><span class="pre">NUM_THREADS</span></code> : (GDAL &gt;= 1.10) 设置为一个数值，或者是 <code class="docutils literal"><span class="pre">ALL_CPUS</span></code> 可以设置多线程，使用并行化处理图像变换。没有设置默认为单线程。</p></li>
</ul>
</dd></dl>

<dl class="member">
<dt id="_CPPv217dfWarpMemoryLimit">
<span id="dfWarpMemoryLimit__double"></span>double <code class="descclassname"></code><code class="descname">dfWarpMemoryLimit</code><br /></dt>
<dd><p>设置GDALWarpOperation在处理图像中使用的最大内存数。单位为比特，默认值比较保守（比较小），可以根据自己的内存大小来进行调整这个值。增加这个值可以帮助提高程序的运行效率，但是需要注意内存的大小。这个大小、GDAL的缓存大小，还有你的应用程序以及系统所需要的内存加起来要小于系统的内存，否则会导致错误。一般来说，比如一个内存为256MB的系统，这个值最少设置为64MB比较合理。注意，这个值不包括GDAL读取数据使用的内存。</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv212eResampleAlg">
<span id="eResampleAlg__GDALResampleAlg"></span>GDALResampleAlg <code class="descclassname"></code><code class="descname">eResampleAlg</code><br /></dt>
<dd><p>重采样的算法选择：</p>
<ul class="simple">
<li><p>GRA_NearestNeighbour ：最邻近插值</p></li>
<li><p>GRA_Bilinear ：双线性插值 (2x2 kernel)</p></li>
<li><p>GRA_Cubic ：立方卷积逼近 (4x4 kernel)</p></li>
<li><p>GRA_CubicSpline：三次样条线逼近(4x4 kernel)</p></li>
<li><p>GRA_Lanczos ：Lanczos windowed sinc 插值 (6x6 kernel)</p></li>
<li><p>GRA_Average ：均值 (计算样区内非空值的所有像素均值)</p></li>
<li><p>GRA_Mode ：众数 (出现频数最高的值)</p></li>
</ul>
</dd></dl>

<dl class="member">
<dt id="_CPPv216eWorkingDataType">
<span id="eWorkingDataType__GDALDataType"></span>GDALDataType <code class="descclassname"></code><code class="descname">eWorkingDataType</code><br /></dt>
<dd><p>计算时用的数据类型，GDT_Unknown 为程序自动判断</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv26hSrcDS">
<span id="hSrcDS__GDALDatasetH"></span>GDALDatasetH <code class="descclassname"></code><code class="descname">hSrcDS</code><br /></dt>
<dd><p>源数据集</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv26hDstDS">
<span id="hDstDS__GDALDatasetH"></span>GDALDatasetH <code class="descclassname"></code><code class="descname">hDstDS</code><br /></dt>
<dd><p>目标数据集</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv210nBandCount">
<span id="nBandCount__i"></span>int <code class="descclassname"></code><code class="descname">nBandCount</code><br /></dt>
<dd><p>所需转换的波段数，0为所有波段</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv211panSrcBands">
<span id="panSrcBands__iP"></span>int *<code class="descclassname"></code><code class="descname">panSrcBands</code><br /></dt>
<dd><p>int数组，源图像中所需处理的波段，从1开始</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv211panDstBands">
<span id="panDstBands__iP"></span>int *<code class="descclassname"></code><code class="descname">panDstBands</code><br /></dt>
<dd><p>int数组，输出的波段</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv213nSrcAlphaBand">
<span id="nSrcAlphaBand__i"></span>int <code class="descclassname"></code><code class="descname">nSrcAlphaBand</code><br /></dt>
<dd><p>源数据中的Alpha波段，0为禁止</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv213nDstAlphaBand">
<span id="nDstAlphaBand__i"></span>int <code class="descclassname"></code><code class="descname">nDstAlphaBand</code><br /></dt>
<dd><p>目标数据中的Alpha波段，0为禁止</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv217padfSrcNoDataReal">
<span id="padfSrcNoDataReal__doubleP"></span>double *<code class="descclassname"></code><code class="descname">padfSrcNoDataReal</code><br /></dt>
<dd><p>源数据中 nodata 的实部，NULL表示没有</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv217padfSrcNoDataImag">
<span id="padfSrcNoDataImag__doubleP"></span>double *<code class="descclassname"></code><code class="descname">padfSrcNoDataImag</code><br /></dt>
<dd><p>源数据中 nodata 的虚部，NULL表示没有</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv217padfDstNoDataReal">
<span id="padfDstNoDataReal__doubleP"></span>double *<code class="descclassname"></code><code class="descname">padfDstNoDataReal</code><br /></dt>
<dd><p>目标数据中 nodata 的实部，NULL表示没有</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv217padfDstNoDataImag">
<span id="padfDstNoDataImag__doubleP"></span>double *<code class="descclassname"></code><code class="descname">padfDstNoDataImag</code><br /></dt>
<dd><p>目标数据中 nodata 的虚部，NULL表示没有</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv211pfnProgress">
<span id="pfnProgress__GDALProgressFunc"></span>GDALProgressFunc <code class="descclassname"></code><code class="descname">pfnProgress</code><br /></dt>
<dd><p>进度条显示函数，NULL表示没有</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv212pProgressArg">
<span id="pProgressArg__voidP"></span>void *<code class="descclassname"></code><code class="descname">pProgressArg</code><br /></dt>
<dd><p>传给pfnProgress的回调参数</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv214pfnTransformer">
<span id="pfnTransformer__GDALTransformerFunc"></span>GDALTransformerFunc <code class="descclassname"></code><code class="descname">pfnTransformer</code><br /></dt>
<dd><p>几何变换函数</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv215pTransformerArg">
<span id="pTransformerArg__voidP"></span>void *<code class="descclassname"></code><code class="descname">pTransformerArg</code><br /></dt>
<dd><p>几何变换函数参数</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv28hCutline">
<span id="hCutline__voidP"></span>void *<code class="descclassname"></code><code class="descname">hCutline</code><br /></dt>
<dd><p>裁切线，OGRPolygonH 类型</p>
</dd></dl>

<dl class="member">
<dt id="_CPPv218dfCutlineBlendDist">
<span id="dfCutlineBlendDist__double"></span>double <code class="descclassname"></code><code class="descname">dfCutlineBlendDist</code><br /></dt>
<dd><p>切割线宽容度，默认为零</p>
</dd></dl>

</div>
<div class="section" id="id4">
<h2>几何变换函数简介</h2>
<p><a class="reference external" href="http://www.gdal.org/gdal__alg_8h.html#a7df61123fec15deb3da3acabce19e647">GDALTransformerFunc</a><span class="link-target"> [http://www.gdal.org/gdal__alg_8h.html#a7df61123fec15deb3da3acabce19e647]</span>  是一个函数签名，用来计算空间点几何变换，也是 <code class="docutils literal"><span class="pre">GDALWarp</span></code> 的核心部分，定义在GDAL算法文件中。 <code class="docutils literal"><span class="pre">GDAL</span></code> 中可用的算法有：</p>
<ul class="simple">
<li><p><code class="docutils literal"><span class="pre">GDALApproxTransform</span></code>  近似变换</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALGCPTransform</span></code> GCP投影变换</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALGenImgProjTransform</span></code> 图像几何变换</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALReprojectionTransform</span></code> 重投影变换</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALTPSTransform</span></code> TPS变换</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALRPCTransform</span></code> <a class="reference external" href="http://trac.osgeo.org/gdal/wiki/rfc22_rpc">RPC</a><span class="link-target"> [http://trac.osgeo.org/gdal/wiki/rfc22_rpc]</span> 变换</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALGeoLocTransform</span></code> <a class="reference external" href="http://trac.osgeo.org/gdal/wiki/rfc4_geolocate">GeoLoc</a><span class="link-target"> [http://trac.osgeo.org/gdal/wiki/rfc4_geolocate]</span> 变换</p></li>
</ul>
<p>与 <code class="docutils literal"><span class="pre">GDALTransformerFunc</span></code> 对应，默认有几个函数生成几何变换函数参数：</p>
<ul class="simple">
<li><p><code class="docutils literal"><span class="pre">GDALCreateApproxTransformer</span></code> 对应生成近似变换参数</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALCreateGCPTransformer</span></code> 对应生成GCP投影变换参数</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALCreateGenImgProjTransformer</span></code>  对应生成图像几何变换参数</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALCreateGenImgProjTransformer2</span></code>  对应生成图像几何变换参数</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALCreateGenImgProjTransformer3</span></code>  对应生成图像几何变换参数</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALCreateReprojectionTransformer</span></code> 对应生成重投影变换参数</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALCreateTPSTransformer</span></code> 对应生成TPS变换参数</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALCreateRPCTransformer</span></code> 对应生成  <a class="reference external" href="http://trac.osgeo.org/gdal/wiki/rfc22_rpc">RPC</a><span class="link-target"> [http://trac.osgeo.org/gdal/wiki/rfc22_rpc]</span> 变换投影变换参数</p></li>
<li><p><code class="docutils literal"><span class="pre">GDALCreateGeoLocTransformer</span></code> 对应生成 <a class="reference external" href="http://trac.osgeo.org/gdal/wiki/rfc4_geolocate">GeoLoc</a><span class="link-target"> [http://trac.osgeo.org/gdal/wiki/rfc4_geolocate]</span> 投影变换参数</p></li>
</ul>
<p>这部分看起来比较复杂，实际使用时，比较简便。只需要在 <code class="docutils literal"><span class="pre">GDALWarpOptions-&gt;pfnTransformer</span></code> 中指定算法名称， <code class="docutils literal"><span class="pre">GDALWarpOptions-&gt;pTransformerArg</span></code> 中指定对应的算法参数函数即可，如下代码所示：</p>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">pfnTransformer</span> <span class="o">=</span> <span class="n">GDALGenImgProjTransform</span><span class="p">;</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">pTransformerArg</span> <span class="o">=</span>
    <span class="n">GDALCreateGenImgProjTransformer</span><span class="p">(</span><span class="n">pSrcDs</span><span class="p">,</span>
                                    <span class="n">sFromWkt</span><span class="p">,</span>
                                    <span class="n">pDstDs</span><span class="p">,</span>
                                    <span class="n">sToWkt</span><span class="p">,</span>
                                    <span class="n">FALSE</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
</pre></div>
</div>
<p>每个Transformer的所需参数不同，请参见 <a class="reference external" href="http://www.gdal.org/gdal__alg_8h.html#a7671696d085085a0bfba3c3df9ffcc0a">GDAL Algorithms C API</a><span class="link-target"> [http://www.gdal.org/gdal__alg_8h.html#a7671696d085085a0bfba3c3df9ffcc0a]</span> ，近似计算有些特殊，在使用Transformer时要传递几何变换函数，参考 <a class="reference internal" href="#optimization"><span class="std std-ref">性能优化</span></a> 部分最后一条。</p>
</div>
<div class="section" id="id8">
<h2>完整流程</h2>
<p>下面介绍使用 <code class="docutils literal"><span class="pre">GDALWarp</span></code> 提供的接口，实现几何变换的完整流程：</p>
<div class="section" id="id9">
<h3>创建输出文件</h3>
<p>几何变换后输出文件的范围和投影仿射参数都将发生变化，输出的文件大小可能是已知，也可能是未知的。因此创建输出文件方式也有两种：</p>
<ul class="simple">
<li><p>已知的例如重采样或者裁剪，我们知道输出文件大小，需要自己计算文件大小</p></li>
<li><p>未知例如投影，我们GDAL中提供计算函数，我们将使用 <code class="docutils literal"><span class="pre">GDALSuggestedWarpOutput</span></code> 函数预测输出文件大小和仿射变换，使用 <code class="docutils literal"><span class="pre">GDALDriver-&gt;Create()</span></code> 函数创建输出文件</p></li>
</ul>
<p>重采样创建文件示例：</p>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="n">GDALAllRegister</span><span class="p">();</span>
<span class="c1">//打开输入文件</span>
<span class="n">GDALDataset</span> <span class="o">*</span><span class="n">pDSrc</span> <span class="o">=</span> <span class="p">(</span><span class="n">GDALDataset</span> <span class="o">*</span><span class="p">)</span><span class="n">GDALOpen</span><span class="p">(</span><span class="n">InFile</span><span class="p">,</span> <span class="n">GA_ReadOnly</span><span class="p">);</span>

<span class="k">if</span><span class="p">(</span><span class="n">pDSrc</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="c1">//创建Driver</span>
<span class="n">GDALDriver</span> <span class="o">*</span><span class="n">pDriver</span> <span class="o">=</span> <span class="n">GetGDALDriverManager</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">GetDriverByName</span><span class="p">(</span><span class="s">&quot;GTiff&quot;</span><span class="p">);</span>

<span class="k">if</span><span class="p">(</span><span class="n">pDriver</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">GDALClose</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDSrc</span><span class="p">);</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">2</span><span class="p">;</span>
<span class="p">}</span>
<span class="c1">//获取源数据中的投影/波段数/仿射变换等信息</span>
<span class="kt">int</span> <span class="n">inBandCount</span> <span class="o">=</span> <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetRasterCount</span><span class="p">();</span>
<span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">strWkt</span> <span class="o">=</span> <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetProjectionRef</span><span class="p">();</span>
<span class="n">GDALDataType</span> <span class="n">dataType</span> <span class="o">=</span> <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetRasterBand</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetRasterDataType</span><span class="p">();</span>
<span class="kt">double</span> <span class="n">geos</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
<span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetGeoTransform</span><span class="p">(</span><span class="n">geos</span><span class="p">);</span>
<span class="c1">//获取源数据中左上角点地理坐标Img2CoordX/Img2CoordY为图片到投影坐标转换函数</span>
<span class="kt">double</span> <span class="n">lefttopx</span> <span class="o">=</span> <span class="n">Img2CoordX</span><span class="p">(</span><span class="n">geos</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
<span class="kt">double</span> <span class="n">lefttopy</span> <span class="o">=</span> <span class="n">Img2CoordY</span><span class="p">(</span><span class="n">geos</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
<span class="c1">//计算新高度和宽度,以及投影信息</span>
<span class="kt">int</span> <span class="n">newWidth</span> <span class="o">=</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetRasterXSize</span><span class="p">()</span><span class="o">*</span><span class="n">geos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="n">fResX</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">newHeight</span> <span class="o">=</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">fabs</span><span class="p">(</span><span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetRasterYSize</span><span class="p">()</span><span class="o">*</span><span class="n">geos</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">/</span><span class="n">fResY</span><span class="p">);</span>
<span class="n">geos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">lefttopx</span><span class="p">;</span>
<span class="n">geos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">fResX</span><span class="p">;</span>
<span class="n">geos</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">lefttopy</span><span class="p">;</span>
<span class="n">geos</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="n">fResY</span><span class="p">;</span>
<span class="kt">int</span> <span class="o">*</span><span class="n">pSrcBand</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
<span class="kt">int</span> <span class="o">*</span><span class="n">pDstBand</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">iBandSize</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="c1">//创建输出文件</span>
<span class="n">GDALDataset</span> <span class="o">*</span><span class="n">pDDst</span> <span class="o">=</span> <span class="n">pDriver</span><span class="o">-&gt;</span><span class="n">Create</span><span class="p">(</span><span class="n">OutFile</span><span class="p">,</span>
                                     <span class="n">newWidth</span><span class="p">,</span>
                                     <span class="n">newHeight</span><span class="p">,</span>
                                     <span class="n">iBandSize</span><span class="p">,</span>
                                     <span class="n">dataType</span><span class="p">,</span>
                                     <span class="nb">NULL</span><span class="p">);</span>
<span class="n">pDDst</span><span class="o">-&gt;</span><span class="n">SetProjection</span><span class="p">(</span><span class="n">strWkt</span><span class="p">);</span>
<span class="n">pDDst</span><span class="o">-&gt;</span><span class="n">SetGeoTransform</span><span class="p">(</span><span class="n">geos</span><span class="p">);</span>
</pre></div>
</div>
<p>投影变换创建文件示例：</p>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="c1">//打开文件</span>
<span class="n">GDALAllRegister</span><span class="p">();</span>
<span class="n">GDALDataset</span> <span class="o">*</span><span class="n">pProjDS</span> <span class="o">=</span> <span class="p">(</span><span class="n">GDALDataset</span> <span class="o">*</span><span class="p">)</span><span class="n">GDALOpen</span><span class="p">(</span><span class="n">ProjFile</span><span class="p">,</span> <span class="n">GA_ReadOnly</span><span class="p">);</span>

<span class="k">if</span><span class="p">(</span><span class="n">pProjDS</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">2</span><span class="p">;</span>   <span class="c1">//打开坐标文件失败</span>
<span class="p">}</span>
<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sToWkt</span> <span class="o">=</span> <span class="p">...</span><span class="c1">//输出的投影</span>

<span class="c1">//输出文件</span>
<span class="n">GDALDataset</span> <span class="o">*</span><span class="n">pDstDs</span><span class="p">;</span>
<span class="c1">//创建Driver</span>
<span class="n">GDALDriver</span><span class="o">*</span> <span class="n">pDriver</span> <span class="o">=</span> <span class="p">(</span><span class="n">GDALDriver</span><span class="o">*</span><span class="p">)</span><span class="n">GDALGetDriverByName</span><span class="p">(</span><span class="s">&quot;GTiff&quot;</span><span class="p">);</span>

<span class="k">if</span><span class="p">(</span><span class="n">pDriver</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">3</span><span class="p">;</span>   <span class="c1">//注册driver失败</span>
<span class="p">}</span>

<span class="c1">//计算输出投影参数</span>

<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sFromWkt</span> <span class="o">=</span> <span class="n">GDALGetProjectionRef</span><span class="p">(</span><span class="n">pProjDS</span><span class="p">);</span>
<span class="n">CPLAssert</span><span class="p">(</span><span class="n">sFromWkt</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span><span class="n">strlen</span><span class="p">(</span><span class="n">sFromWkt</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">);</span>

<span class="c1">//计算变换参数</span>
<span class="kt">void</span> <span class="o">*</span><span class="n">pTransformArg</span><span class="p">;</span>
<span class="n">pTransformArg</span> <span class="o">=</span> <span class="n">GDALCreateGenImgProjTransformer</span><span class="p">(</span><span class="n">pProjDS</span><span class="p">,</span>
                                                <span class="n">sFromWkt</span><span class="p">,</span>
                                                <span class="nb">NULL</span><span class="p">,</span>
                                                <span class="n">sToWkt</span><span class="p">,</span>
                                                <span class="n">FALSE</span><span class="p">,</span>
                                                <span class="mi">0</span><span class="p">,</span>
                                                <span class="mi">3</span><span class="p">);</span>
<span class="n">CPLAssert</span><span class="p">(</span><span class="n">pTransformArg</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">);</span>
<span class="kt">double</span> <span class="n">geos</span><span class="p">[</span><span class="mi">6</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">nPixels</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">nLines</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="n">CPLErr</span> <span class="n">eErr</span><span class="p">;</span>
<span class="n">eErr</span> <span class="o">=</span> <span class="n">GDALSuggestedWarpOutput</span><span class="p">(</span><span class="n">pProjDS</span><span class="p">,</span>
                               <span class="n">GDALGenImgProjTransform</span><span class="p">,</span>
                               <span class="n">pTransformArg</span><span class="p">,</span>
                               <span class="n">geos</span><span class="p">,</span>
                               <span class="o">&amp;</span><span class="n">nPixels</span><span class="p">,</span>
                               <span class="o">&amp;</span><span class="n">nLines</span><span class="p">);</span>
<span class="n">CPLAssert</span><span class="p">(</span><span class="n">eErr</span> <span class="o">==</span> <span class="n">CE_None</span><span class="p">);</span>
<span class="n">GDALDestroyGenImgProjTransformer</span><span class="p">(</span><span class="n">pTransformArg</span><span class="p">);</span>
<span class="c1">//输出数据类型</span>
<span class="n">GDALDataType</span> <span class="n">eDataType</span><span class="o">=</span> <span class="n">GDALGetRasterDataType</span><span class="p">(</span><span class="n">GDALGetRasterBand</span><span class="p">(</span><span class="n">pProjDS</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span>
<span class="c1">//计算创建波段数量</span>
<span class="kt">int</span> <span class="n">nCreateBandCount</span> <span class="o">=</span> <span class="n">pProjDS</span><span class="o">-&gt;</span><span class="n">GetRasterCount</span><span class="p">();</span>

<span class="c1">//创建文件</span>
<span class="n">pDstDs</span> <span class="o">=</span> <span class="p">(</span><span class="n">GDALDataset</span><span class="o">*</span><span class="p">)</span><span class="n">GDALCreate</span><span class="p">(</span><span class="n">pDriver</span><span class="p">,</span>
                                  <span class="n">sOutFileName</span><span class="p">,</span>
                                  <span class="n">nPixels</span><span class="p">,</span>
                                  <span class="n">nLines</span><span class="p">,</span>
                                  <span class="n">nCreateBandCount</span><span class="p">,</span>
                                  <span class="n">eDataType</span><span class="p">,</span>
                                  <span class="nb">NULL</span><span class="p">);</span>
<span class="n">GDALSetProjection</span><span class="p">(</span><span class="n">pDstDs</span><span class="p">,</span> <span class="n">sToWkt</span><span class="p">);</span>
<span class="n">GDALSetGeoTransform</span><span class="p">(</span><span class="n">pDstDs</span><span class="p">,</span> <span class="n">geos</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="id10">
<h3>设置选项</h3>
<p>选项设置参见 <a class="reference internal" href="#gdalwarpoptions"><span class="std std-ref">GDALWarpOptions选项介绍</span></a> ，设置一般需要设置输入输出数据集，需要操作的波段，几何变换函数和参数，进度条，优化参数这几项。示例如下：</p>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="c1">//warp 选项</span>
<span class="n">GDALWarpOptions</span> <span class="o">*</span><span class="n">psWarpOptions</span> <span class="o">=</span> <span class="n">GDALCreateWarpOptions</span><span class="p">();</span>
<span class="c1">//源</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">hSrcDS</span> <span class="o">=</span> <span class="n">pSrcDs</span><span class="p">;</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">hDstDS</span> <span class="o">=</span> <span class="n">pDstDs</span><span class="p">;</span>
<span class="c1">//优化选项</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">dfWarpMemoryLimit</span> <span class="o">=</span> <span class="mi">512000000</span><span class="p">;</span>
<span class="kt">char</span><span class="o">**</span> <span class="n">papszWarpOptions</span><span class="o">=</span><span class="nb">NULL</span><span class="p">;</span>
<span class="n">papszWarpOptions</span> <span class="o">=</span> <span class="n">CSLSetNameValue</span><span class="p">(</span><span class="n">papszWarpOptions</span><span class="p">,</span><span class="s">&quot;NUM_THREADS&quot;</span><span class="p">,</span><span class="s">&quot;ALL_CPUS&quot;</span><span class="p">);</span>
<span class="n">papszWarpOptions</span> <span class="o">=</span> <span class="n">CSLSetNameValue</span><span class="p">(</span><span class="n">papszWarpOptions</span><span class="p">,</span><span class="s">&quot;WRITE_FLUSH&quot;</span><span class="p">,</span><span class="s">&quot;YES&quot;</span><span class="p">);</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">papszWarpOptions</span><span class="o">=</span><span class="n">papszWarpOptions</span><span class="p">;</span>
<span class="c1">//源和输出对应的波段</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">nBandCount</span> <span class="o">=</span> <span class="n">nCreateBandCount</span><span class="p">;</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">panSrcBands</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span> <span class="n">CPLMalloc</span><span class="p">(</span><span class="n">nCreateBandCount</span><span class="o">*</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">panDstBands</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span> <span class="n">CPLMalloc</span><span class="p">(</span><span class="n">nCreateBandCount</span><span class="o">*</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
<span class="kt">int</span> <span class="n">i</span><span class="p">;</span>

<span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">nCreateBandCount</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">panSrcBands</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pSrcBand</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">panDstBands</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pDstBand</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
<span class="p">}</span>

<span class="k">delete</span><span class="p">[]</span> <span class="n">pSrcBand</span><span class="p">;</span>
<span class="k">delete</span><span class="p">[]</span> <span class="n">pDstBand</span><span class="p">;</span>
<span class="c1">//进度条</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">pfnProgress</span> <span class="o">=</span> <span class="n">GDALTermProgress</span><span class="p">;</span>
<span class="c1">// 几何变换函数和参数</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">pfnTransformer</span> <span class="o">=</span> <span class="n">GDALGenImgProjTransform</span><span class="p">;</span>
<span class="n">psWarpOptions</span><span class="o">-&gt;</span><span class="n">pTransformerArg</span> <span class="o">=</span>
    <span class="n">GDALCreateGenImgProjTransformer</span><span class="p">(</span><span class="n">pSrcDs</span><span class="p">,</span>
                                    <span class="n">sFromWkt</span><span class="p">,</span>
                                    <span class="n">pDstDs</span><span class="p">,</span>
                                    <span class="n">sToWkt</span><span class="p">,</span>
                                    <span class="n">FALSE</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="id11">
<h3>执行变换</h3>
<p>执行较为简单，新建 <code class="docutils literal"><span class="pre">GDALWarpOperation</span></code> ,调用 <code class="docutils literal"><span class="pre">Initialize</span></code> 函数，然后调用 <code class="docutils literal"><span class="pre">ChunkAndWarpMulti</span></code> 或者 <code class="docutils literal"><span class="pre">ChunkAndWarpImage</span></code> ，代码一般如下：</p>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="n">GDALWarpOperation</span> <span class="n">opt</span><span class="p">;</span>
<span class="k">if</span><span class="p">(</span><span class="n">opt</span><span class="p">.</span><span class="n">Initialize</span><span class="p">(</span><span class="n">psWarpOptions</span><span class="p">)</span><span class="o">!=</span><span class="n">CE_None</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">GDALClose</span><span class="p">(</span><span class="n">pSrcDs</span><span class="p">);</span>
    <span class="n">GDALClose</span><span class="p">(</span><span class="n">outDs</span><span class="p">);</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="n">opt</span><span class="p">.</span><span class="n">ChunkAndWarpMulti</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">CutWidth</span><span class="p">,</span> <span class="n">CutHeight</span><span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="id12">
<h3>清理环境</h3>
<p>完成后，需要释放变换参数、删除数据集。代码如下：</p>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="n">GDALDestroyGenImgProjTransformer</span><span class="p">(</span><span class="n">psWo</span><span class="o">-&gt;</span><span class="n">pTransformerArg</span><span class="p">);</span>
<span class="n">GDALDestroyWarpOptions</span><span class="p">(</span><span class="n">psWo</span><span class="p">);</span>
<span class="n">GDALClose</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDSrc</span><span class="p">);</span>
<span class="n">GDALClose</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDDst</span><span class="p">);</span>
<span class="k">delete</span><span class="p">[]</span> <span class="n">pSrcBand</span><span class="p">;</span>
<span class="k">delete</span><span class="p">[]</span> <span class="n">pDstBand</span><span class="p">;</span>
</pre></div>
</div>
</div>
<div class="section" id="id13">
<h3>完整代码</h3>
<p>完整的重采样代码如下：</p>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="cm">/**</span>
<span class="cm">图像坐标转地理坐标x</span>
<span class="cm">    @param geos   变换参数</span>
<span class="cm">    @param x      图像X坐标</span>
<span class="cm">    @param y      图像Y坐标</span>
<span class="cm">    @return       地理X坐标</span>
<span class="cm"> */</span>
<span class="kt">double</span> <span class="nf">Img2CoordX</span><span class="p">(</span><span class="k">const</span> <span class="kt">double</span> <span class="o">*</span><span class="n">geos</span><span class="p">,</span> <span class="kt">double</span> <span class="n">x</span><span class="p">,</span> <span class="kt">double</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">return</span> <span class="n">geos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">geos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="n">x</span> <span class="o">+</span> <span class="n">geos</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">*</span> <span class="n">y</span><span class="p">;</span>
<span class="p">}</span>
<span class="cm">/**</span>
<span class="cm">图像坐标转地理坐标y</span>
<span class="cm">    @param geos   变换参数</span>
<span class="cm">    @param x      图像X坐标</span>
<span class="cm">    @param y      图像Y坐标</span>
<span class="cm">    @return       地理Y坐标</span>
<span class="cm"> */</span>
<span class="kt">double</span> <span class="nf">Img2CoordY</span><span class="p">(</span><span class="k">const</span> <span class="kt">double</span> <span class="o">*</span><span class="n">geos</span><span class="p">,</span> <span class="kt">double</span> <span class="n">x</span><span class="p">,</span> <span class="kt">double</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">return</span> <span class="n">geos</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">+</span> <span class="n">geos</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">*</span> <span class="n">x</span> <span class="o">+</span> <span class="n">geos</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">*</span> <span class="n">y</span><span class="p">;</span>
<span class="p">}</span>

<span class="cm">/**</span>
<span class="cm">    图像重采样</span>
<span class="cm">    @param InFile       输入文件</span>
<span class="cm">    @param OutFile      输出文件</span>
<span class="cm">    @param fResX        x分辨率</span>
<span class="cm">    @param fResY        Y分辨率</span>
<span class="cm">    @param iResampleAlg 重采样方式,默认为2</span>
<span class="cm">                            GRA_NearestNeighbour=0,</span>
<span class="cm">                            GRA_Bilinear=1,</span>
<span class="cm">                            GRA_Cubic=2,</span>
<span class="cm">                            GRA_CubicSpline=3,</span>
<span class="cm">                            GRA_Lanczos=4,</span>
<span class="cm">                            GRA_Average=5,</span>
<span class="cm">                            GRA_Mode=6</span>
<span class="cm">    @param pBandIndex   重采样的波段，默认为NULL，全部波段重采样</span>
<span class="cm">    @param pnBandCount   重采样波段总数，默认为0 ，全部波段重采样</span>
<span class="cm">*/</span>
<span class="kt">int</span> <span class="nf">Resample</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">InFile</span> <span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">OutFile</span><span class="p">,</span> <span class="kt">float</span> <span class="n">fResX</span> <span class="p">,</span>
             <span class="kt">float</span> <span class="n">fResY</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iResampleAlg</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">pBandIndex</span><span class="p">,</span> <span class="kt">int</span> <span class="n">pnBandCount</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">GDALAllRegister</span><span class="p">();</span>
  <span class="n">GDALResampleAlg</span> <span class="n">eResample</span> <span class="o">=</span> <span class="p">(</span><span class="n">GDALResampleAlg</span><span class="p">)</span><span class="n">iResampleAlg</span><span class="p">;</span>
  <span class="c1">//打开文件</span>
  <span class="n">GDALDataset</span> <span class="o">*</span><span class="n">pDSrc</span> <span class="o">=</span> <span class="p">(</span><span class="n">GDALDataset</span> <span class="o">*</span><span class="p">)</span><span class="n">GDALOpen</span><span class="p">(</span><span class="n">InFile</span><span class="p">,</span> <span class="n">GA_ReadOnly</span><span class="p">);</span>

  <span class="k">if</span><span class="p">(</span><span class="n">pDSrc</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="n">GDALDriver</span> <span class="o">*</span><span class="n">pDriver</span> <span class="o">=</span> <span class="n">GetGDALDriverManager</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">GetDriverByName</span><span class="p">(</span><span class="s">&quot;GTiff&quot;</span><span class="p">);</span>

  <span class="k">if</span><span class="p">(</span><span class="n">pDriver</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">GDALClose</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDSrc</span><span class="p">);</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">2</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="c1">//计算输出投影参数</span>
  <span class="kt">int</span> <span class="n">inBandCount</span> <span class="o">=</span> <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetRasterCount</span><span class="p">();</span>
  <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">strWkt</span> <span class="o">=</span> <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetProjectionRef</span><span class="p">();</span>
  <span class="n">GDALDataType</span> <span class="n">dataType</span> <span class="o">=</span> <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetRasterBand</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetRasterDataType</span><span class="p">();</span>
  <span class="kt">double</span> <span class="n">geos</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
  <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetGeoTransform</span><span class="p">(</span><span class="n">geos</span><span class="p">);</span>
  <span class="kt">double</span> <span class="n">lefttopx</span> <span class="o">=</span> <span class="n">Img2CoordX</span><span class="p">(</span><span class="n">geos</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
  <span class="kt">double</span> <span class="n">lefttopy</span> <span class="o">=</span> <span class="n">Img2CoordY</span><span class="p">(</span><span class="n">geos</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
  <span class="kt">int</span> <span class="n">newWidth</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetRasterXSize</span><span class="p">()</span> <span class="o">*</span> <span class="n">geos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">/</span> <span class="n">fResX</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">newHeight</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">fabs</span><span class="p">(</span><span class="n">pDSrc</span><span class="o">-&gt;</span><span class="n">GetRasterYSize</span><span class="p">()</span> <span class="o">*</span> <span class="n">geos</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">/</span> <span class="n">fResY</span><span class="p">);</span>
  <span class="n">geos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">lefttopx</span><span class="p">;</span>
  <span class="n">geos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">fResX</span><span class="p">;</span>
  <span class="n">geos</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">lefttopy</span><span class="p">;</span>
  <span class="n">geos</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="n">fResY</span><span class="p">;</span>
  <span class="c1">//输入输出波段对应</span>
  <span class="kt">int</span> <span class="o">*</span><span class="n">pSrcBand</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
  <span class="kt">int</span> <span class="o">*</span><span class="n">pDstBand</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">iBandSize</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

  <span class="k">if</span><span class="p">(</span><span class="n">pBandIndex</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="n">pnBandCount</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">iBandSize</span> <span class="o">=</span> <span class="n">pnBandCount</span><span class="p">;</span>
    <span class="n">pSrcBand</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">iBandSize</span><span class="p">];</span>
    <span class="n">pDstBand</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">iBandSize</span><span class="p">];</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">iBandSize</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">pSrcBand</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pBandIndex</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
      <span class="n">pDstBand</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="n">iBandSize</span> <span class="o">=</span> <span class="n">inBandCount</span><span class="p">;</span>
    <span class="n">pSrcBand</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">iBandSize</span><span class="p">];</span>
    <span class="n">pDstBand</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">iBandSize</span><span class="p">];</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">iBandSize</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">pSrcBand</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
      <span class="n">pDstBand</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="c1">//创建输出文件</span>
  <span class="n">GDALDataset</span> <span class="o">*</span><span class="n">pDDst</span> <span class="o">=</span> <span class="n">pDriver</span><span class="o">-&gt;</span><span class="n">Create</span><span class="p">(</span><span class="n">OutFile</span><span class="p">,</span>
                                       <span class="n">newWidth</span><span class="p">,</span>
                                       <span class="n">newHeight</span><span class="p">,</span>
                                       <span class="n">iBandSize</span><span class="p">,</span>
                                       <span class="n">dataType</span><span class="p">,</span>
                                       <span class="nb">NULL</span><span class="p">);</span>
  <span class="n">pDDst</span><span class="o">-&gt;</span><span class="n">SetProjection</span><span class="p">(</span><span class="n">strWkt</span><span class="p">);</span>
  <span class="n">pDDst</span><span class="o">-&gt;</span><span class="n">SetGeoTransform</span><span class="p">(</span><span class="n">geos</span><span class="p">);</span>
  <span class="c1">//参数选项</span>
  <span class="n">GDALWarpOptions</span> <span class="o">*</span><span class="n">psWo</span> <span class="o">=</span> <span class="n">GDALCreateWarpOptions</span><span class="p">();</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">papszWarpOptions</span> <span class="o">=</span> <span class="n">CSLDuplicate</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
  <span class="c1">//数据源</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">eWorkingDataType</span> <span class="o">=</span> <span class="n">dataType</span><span class="p">;</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">eResampleAlg</span> <span class="o">=</span> <span class="n">eResample</span><span class="p">;</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">hSrcDS</span> <span class="o">=</span> <span class="p">(</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDSrc</span><span class="p">;</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">hDstDS</span> <span class="o">=</span> <span class="p">(</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDDst</span><span class="p">;</span>
  <span class="c1">//波段</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">nBandCount</span> <span class="o">=</span> <span class="n">iBandSize</span><span class="p">;</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">panSrcBands</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span> <span class="n">CPLMalloc</span><span class="p">(</span><span class="n">iBandSize</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">panDstBands</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span> <span class="n">CPLMalloc</span><span class="p">(</span><span class="n">iBandSize</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>

  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">iBandSize</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">panSrcBands</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pSrcBand</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">panDstBands</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pDstBand</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
  <span class="p">}</span>

  <span class="c1">//变换函数设置</span>
  <span class="kt">void</span> <span class="o">*</span><span class="n">hTransformArg</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
  <span class="n">hTransformArg</span> <span class="o">=</span>  <span class="n">GDALCreateGenImgProjTransformer2</span><span class="p">(</span>
                     <span class="p">(</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDSrc</span><span class="p">,</span>
                     <span class="p">(</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDDst</span><span class="p">,</span>
                     <span class="nb">NULL</span><span class="p">);</span>
  <span class="n">GDALTransformerFunc</span> <span class="n">pFnTransformer</span> <span class="o">=</span> <span class="n">GDALGenImgProjTransform</span><span class="p">;</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">pfnTransformer</span> <span class="o">=</span> <span class="n">pFnTransformer</span><span class="p">;</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">pTransformerArg</span> <span class="o">=</span> <span class="n">hTransformArg</span><span class="p">;</span>
  <span class="c1">//进度条</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">pfnProgress</span> <span class="o">=</span> <span class="n">GDALTermProgress</span><span class="p">;</span>
  <span class="c1">//优化选项</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">dfWarpMemoryLimit</span> <span class="o">=</span> <span class="mi">512000000</span><span class="p">;</span>
  <span class="kt">char</span> <span class="o">**</span><span class="n">papszWarpOptions</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
  <span class="n">papszWarpOptions</span> <span class="o">=</span> <span class="n">CSLSetNameValue</span><span class="p">(</span><span class="n">papszWarpOptions</span><span class="p">,</span> <span class="s">&quot;NUM_THREADS&quot;</span><span class="p">,</span> <span class="s">&quot;ALL_CPUS&quot;</span><span class="p">);</span>
  <span class="n">papszWarpOptions</span> <span class="o">=</span> <span class="n">CSLSetNameValue</span><span class="p">(</span><span class="n">papszWarpOptions</span><span class="p">,</span> <span class="s">&quot;WRITE_FLUSH&quot;</span><span class="p">,</span> <span class="s">&quot;YES&quot;</span><span class="p">);</span>
  <span class="n">psWo</span><span class="o">-&gt;</span><span class="n">papszWarpOptions</span> <span class="o">=</span> <span class="n">papszWarpOptions</span><span class="p">;</span>
  <span class="c1">//开始转换</span>
  <span class="n">GDALWarpOperation</span> <span class="n">oWo</span><span class="p">;</span>

  <span class="k">if</span><span class="p">(</span><span class="n">oWo</span><span class="p">.</span><span class="n">Initialize</span><span class="p">(</span><span class="n">psWo</span><span class="p">)</span> <span class="o">!=</span> <span class="n">CE_None</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">GDALClose</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDSrc</span><span class="p">);</span>
    <span class="n">GDALClose</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDDst</span><span class="p">);</span>
    <span class="k">return</span> <span class="o">-</span><span class="mi">4</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="n">oWo</span><span class="p">.</span><span class="n">ChunkAndWarpMulti</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">newWidth</span><span class="p">,</span> <span class="n">newHeight</span><span class="p">);</span>
  <span class="c1">//清理环境</span>
  <span class="n">GDALDestroyGenImgProjTransformer</span><span class="p">(</span><span class="n">psWo</span><span class="o">-&gt;</span><span class="n">pTransformerArg</span><span class="p">);</span>
  <span class="n">GDALDestroyWarpOptions</span><span class="p">(</span><span class="n">psWo</span><span class="p">);</span>
  <span class="n">GDALClose</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDSrc</span><span class="p">);</span>
  <span class="n">GDALClose</span><span class="p">((</span><span class="n">GDALDatasetH</span><span class="p">)</span> <span class="n">pDDst</span><span class="p">);</span>
  <span class="k">delete</span><span class="p">[]</span> <span class="n">pSrcBand</span><span class="p">;</span>
  <span class="k">delete</span><span class="p">[]</span> <span class="n">pDstBand</span><span class="p">;</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="optimization">
<span id="id14"></span><h2>性能优化</h2>
<p>下面几点可以在使用变换API的时候提高处理效率。</p>
<ul class="simple">
<li><p>增加变换API使用的内存，可以使程序执行的更快。这个参数叫GDALWarpOptions::dfWarpMemoryLimit。理论上，越大的块对于数据I/O效率越高，并且变换的效率也会越高。然而，变换所需的内存和GDAL缓存应该小于机器的内存，最多是内存的2/3左右。</p></li>
<li><p>增加GDAL的缓存。这个尤其对于在处理非常大的输入图像很有用。如果所有的输入输出图像的数据频繁的读取会极大的降低运行效率。使用函数GDALSetCacheMax()来设置GDAL使用的最大缓存。</p></li>
<li><p>当写入一个空的输出文件，在GDALWarpOptions::papszWarpOptions 对象中使用INIT_DEST选项来进行设置。这样可以很大的减少磁盘的IO操作。</p></li>
<li><p>输入和输出文件使用分块存储的文件格式。分块文件格式可以快速的访问一块数据，相比来说，普通的大数据量的顺序存储文件格式在IO操作中要花费更多的时间。</p></li>
<li><p>在一次调用中处理所有的波段。一次处理所有的波段比每次处理一个波段要保险。</p></li>
<li><p>使用GDALWarpOperation::ChunkAndWarpMulti()方法来代替GDALWarpOperation::ChunkAndWarpImage()方法。这个使用多个独立的线程来进行IO操作和变换影像处理，能够提高CPU和IO的效率。执行这个操作，GDAL需要多线程的支持（从GDAL1.8.0开始，默认在Win32平台、Unix平台是支持的，对于之前的版本，需要在配置中进行修改才行）。</p></li>
<li><p>重采样方式，最邻近象元执行速度最快，双线性内插次之，三次立方卷次最慢。不要使用根据复杂的重采样函数。</p></li>
<li><p>避免使用复杂的掩码选项。比如，最邻近采样在处理没有掩码的8bit数据要比一般的效率高很多。</p></li>
<li><p>使用近似的变换代替精确的变换（精确的变换是每个象元都会计算一次）。下面的代码用来说明近似变换的使用方式，近似变换要求指定一个变换的误差dfErrorThreshold，这个误差单位是输出图像的象元个数</p></li>
</ul>
<div class="highlight-c++"><div class="highlight"><pre><span></span><span class="n">hTransformArg</span> <span class="o">=</span>  <span class="n">GDALCreateApproxTransformer</span><span class="p">(</span><span class="n">GDALGenImgProjTransform</span><span class="p">,</span>
                                             <span class="n">hGenImgProjArg</span><span class="p">,</span>
                                             <span class="n">dfErrorThreshold</span> <span class="p">);</span>
<span class="n">pfnTransformer</span> <span class="o">=</span> <span class="n">GDALApproxTransform</span><span class="p">;</span>
</pre></div>
</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>